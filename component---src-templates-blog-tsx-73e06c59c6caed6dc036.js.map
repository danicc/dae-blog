{"version":3,"sources":["webpack:///./src/templates/Blog.tsx"],"names":["Blog","props","pageContext","currentPage","totalPages","data","location","allMarkdownRemark","edges","totalCount","langs","config","defaultLang","langUrl","getCurrentLangKey","pathname","title","map","node","id","frontmatter","lang","date","excerpt","timeToRead","category","key","url","BlogQuery"],"mappings":"2FAAA,8GAmDeA,UAhCe,SAAAC,GAAS,MACDA,EAAMC,YAAlCC,EAD6B,EAC7BA,YAAaC,EADgB,EAChBA,WAEbC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAHuB,EAIYD,EAAKE,kBAA9CC,EAJ6B,EAI7BA,MAAOC,EAJsB,EAItBA,WACPC,EAAuBC,IAAvBD,MAAOE,EAAgBD,IAAhBC,YAETC,EADUC,4BAAkBJ,EAAOE,EAAaN,EAASS,YACnCH,EAAc,GAAK,KAE/C,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUU,MAAK,mBAAqBP,EAArB,KAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGD,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CACEC,GAAID,EAAKE,YAAYD,GACrBE,KAAMH,EAAKE,YAAYC,KACvBL,MAAOE,EAAKE,YAAYJ,MACxBM,KAAMJ,EAAKE,YAAYE,KACvBC,QAASL,EAAKK,QACdC,WAAYN,EAAKM,WACjBC,SAAUP,EAAKE,YAAYK,SAC3BC,IAAKR,EAAKC,QAGd,kBAAC,IAAD,CAAYhB,YAAaA,EAAaC,WAAYA,EAAYuB,IAAQd,EAAL,cASpE,IAAMe,EAAY","file":"component---src-templates-blog-tsx-73e06c59c6caed6dc036.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { WindowLocation } from '@reach/router';\n\nimport Data from '../models/Data';\nimport AllMarkdownRemark from '../models/AllMarkdownRemark';\nimport { Layout, Wrapper, Content, Article, Pagination } from '../components';\nimport { getCurrentLangKey } from 'ptz-i18n';\nimport config from '../config/SiteConfig';\n\ninterface Props {\n  data: Data;\n  pageContext: {\n    currentPage: number;\n    totalPages: number;\n  };\n  location: WindowLocation;\n}\n\nconst Blog: React.FC<Props> = props => {\n  const { currentPage, totalPages } = props.pageContext;\n\n  const { data, location } = props;\n  const { edges, totalCount }: AllMarkdownRemark = data.allMarkdownRemark;\n  const { langs, defaultLang } = config;\n  const langKey = getCurrentLangKey(langs, defaultLang, location.pathname);\n  const langUrl = langKey === defaultLang ? '' : 'es';\n\n  return (\n    <Layout location={location} title={`Latest stories (${totalCount})`}>\n      <Wrapper>\n        <Content>\n          {edges.map(({ node }) => (\n            <Article\n              id={node.frontmatter.id}\n              lang={node.frontmatter.lang}\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              excerpt={node.excerpt}\n              timeToRead={node.timeToRead}\n              category={node.frontmatter.category}\n              key={node.id}\n            />\n          ))}\n          <Pagination currentPage={currentPage} totalPages={totalPages} url={`${langUrl}/blog`} />\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const BlogQuery = graphql`\n  query($skip: Int!, $limit: Int!, $lang: String!) {\n    allMarkdownRemark(filter: { frontmatter: { lang: { eq: $lang } } }, limit: $limit, skip: $skip) {\n      totalCount\n      edges {\n        node {\n          timeToRead\n          excerpt(truncate: false, pruneLength: 250)\n          frontmatter {\n            id\n            lang\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n            lang\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}